/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./main.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./ai.ts":
/*!***************!*\
  !*** ./ai.ts ***!
  \***************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar settings_1 = __webpack_require__(/*! ./settings */ \"./settings.ts\");\nvar generator_1 = __webpack_require__(/*! ./generator */ \"./generator.ts\");\nvar main_1 = __webpack_require__(/*! ./main */ \"./main.ts\");\nvar AI = /** @class */ (function () {\n    function AI() {\n        this.lastShoot = {};\n        this.shotArr = [];\n        for (var i = 0; i < settings_1.settings.playgroundSize; i++) {\n            var tempArr = [];\n            for (var j = 0; j < settings_1.settings.playgroundSize; j++)\n                tempArr.push(0);\n            this.shotArr.push(tempArr);\n        }\n        this.randomShot = this.randomShot.bind(this);\n    }\n    AI.prototype.shot = function () {\n        var _this_1 = this;\n        if (this.shotArr.every(function (element, index) {\n            return _this_1.shotArr[index].every(function (element) {\n                return (element == 0 || element == 1);\n            });\n        })) {\n            console.log(\"pusta\");\n        }\n        else {\n            //tu proba dobicia\n            //to najlepiej rozrysowac drzewkiem w sumie, analogicnzie do ponizszego \n            //jesli gora nie sprawdzona -> sprawdz -> jesli zajeta dobijaj w gore, jesli nie przejdz do nastepnego etapu -> jesli skonczy sie w gore, jesli dlugosc nie odpowiada najdluzszemu, sprawdz dla jednego w dol czy pelny\n            //jesli gora nie sprawdzona -> sprawdz\n            //jesli gora nie sprawdzona -> sprawdz\n            //jesli gora nie sprawdzona -> sprawdz\n            //jesli gora nie sprawdzona -> sprawdz\n        }\n        //jesli nie uzupelnia i dostepne na planszy jedynki\n        this.randomShot();\n    };\n    AI.prototype.randomShot = function () {\n        var _this = this;\n        function fill(aim, setMove) {\n            if (main_1.playerPlayfield.mainArr[setMove[1]][setMove[0]].shooted == false) {\n                if (aim && main_1.playerPlayfield.mainArr[setMove[1]][setMove[0]].value == 1) {\n                    main_1.playerPlayfield.mainArr[setMove[1]][setMove[0]].shooted = true;\n                    _this.shotArr[setMove[1]][setMove[0]] = 2;\n                    main_1.playerPlayfield.rewrite();\n                    main_1.playerShips.game.giveMove(\"player\");\n                }\n                else if (!aim && main_1.playerPlayfield.mainArr[setMove[1]][setMove[0]].value != 1) {\n                    main_1.playerPlayfield.mainArr[setMove[1]][setMove[0]].shooted = true;\n                    _this.shotArr[setMove[1]][setMove[0]] = 1;\n                    main_1.playerPlayfield.rewrite();\n                    main_1.playerShips.game.giveMove(\"player\");\n                }\n                else {\n                    setMove = [];\n                    setMove.push(generator_1.randomNum(0, settings_1.settings.playgroundSize), generator_1.randomNum(0, settings_1.settings.playgroundSize));\n                    fill(aim, setMove);\n                    return 0;\n                }\n            }\n            else {\n                setMove = [];\n                setMove.push(generator_1.randomNum(0, settings_1.settings.playgroundSize), generator_1.randomNum(0, settings_1.settings.playgroundSize));\n                fill(aim, setMove);\n                return 0;\n            }\n        }\n        setTimeout(function () {\n            var aim;\n            if (Math.random() > Number(settings_1.settings.level))\n                aim = false;\n            else\n                aim = true;\n            var setMove = [];\n            setMove.push(generator_1.randomNum(0, settings_1.settings.playgroundSize), generator_1.randomNum(0, settings_1.settings.playgroundSize));\n            fill(aim, setMove);\n        }, 1000);\n    };\n    return AI;\n}());\nexports.AI = AI;\n\n\n//# sourceURL=webpack:///./ai.ts?");

/***/ }),

/***/ "./decorators.ts":
/*!***********************!*\
  !*** ./decorators.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar main_1 = __webpack_require__(/*! ./main */ \"./main.ts\");\nvar main_2 = __webpack_require__(/*! ./main */ \"./main.ts\");\nfunction log(target, name, descriptor) {\n    var originalMethod = descriptor.value;\n    descriptor.value = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var result = originalMethod.apply(this, args);\n        var infoBox = document.getElementsByClassName(\"shipsToAdd\")[0];\n        if (!Array.isArray(result)) {\n            infoBox.textContent = \"Current move belongs to: \" + result;\n            if (result == \"AI\")\n                infoBox.innerHTML += \"<br/>AI is calculating new move...\";\n        }\n        else {\n            var winner = void 0;\n            if (result[0] == 'player')\n                winner = \"This game has been won by AI.\";\n            else\n                winner = \"Congratulations! You won.\";\n            endAlert(winner);\n            infoBox.innerHTML = \"<button onclick='location.reload()'>Play again</button>\";\n            infoBox.style.marginTop = ((parseFloat(main_1.getStyle(main_2.playerPlayfield.playDiv, \"height\")) - 20) / 2 + \"px\");\n            infoBox.style.height = \"20px\";\n        }\n    };\n}\nexports.log = log;\nfunction endAlert(winner) {\n    var curtain = document.createElement(\"div\");\n    curtain.className = \"curtain\";\n    curtain.style.width = window.innerWidth + \"px\";\n    curtain.style.height = window.innerHeight + \"px\";\n    var curtainBox = document.createElement(\"div\");\n    curtainBox.className = \"curtainBox\";\n    var curtainButton = document.createElement(\"button\");\n    curtainBox.innerHTML = winner + \"<br /><br />\";\n    curtainButton.textContent = \"Understood\";\n    curtainButton.onclick = function () { return curtain.remove(); };\n    curtainBox.appendChild(curtainButton);\n    curtain.appendChild(curtainBox);\n    document.body.appendChild(curtain);\n    curtainBox.style.top = window.innerHeight / 2 - parseFloat(main_1.getStyle(curtainBox, \"height\")) / 2 - parseFloat(main_1.getStyle(curtainBox, \"padding\")) + \"px\";\n    curtainBox.style.left = window.innerWidth / 2 - parseFloat(main_1.getStyle(curtainBox, \"width\")) / 2 - parseFloat(main_1.getStyle(curtainBox, \"padding\")) + \"px\";\n    curtainButton.style.marginLeft = parseFloat(main_1.getStyle(curtainBox, \"width\")) / 2 - parseFloat(main_1.getStyle(curtainButton, \"width\")) / 2 + \"px\";\n}\n\n\n//# sourceURL=webpack:///./decorators.ts?");

/***/ }),

/***/ "./generator.ts":
/*!**********************!*\
  !*** ./generator.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar settings_1 = __webpack_require__(/*! ./settings */ \"./settings.ts\");\nfunction fullFillRandomShips(array) {\n    settings_1.settings.defaultShips.forEach(function (element) {\n        var orientation = randomArr([\"left\", \"bottom\"]);\n        var controler = false;\n        function fill(array) {\n            var tempArr = randomPos((orientation), element);\n            var arrayCopy = array.slice();\n            try {\n                for (var i = 0; i < element; i++)\n                    if (orientation == \"left\" && array[tempArr[0]][tempArr[1] + i].value != 0) {\n                        fill(arrayCopy);\n                        return 0;\n                    }\n                    else if (orientation == \"bottom\" && array[tempArr[0] + i][tempArr[1]].value != 0) {\n                        fill(arrayCopy);\n                        return 0;\n                    }\n            }\n            catch (_a) {\n                fill(arrayCopy);\n                return 0;\n            }\n            try {\n                //ten kod jest tak chujowy, że może spowodować wyschnięcie jąder, epilepsję i wstrząsy, sugeruję go nie czytać i skipnąć do linijki 74\n                if (orientation == \"left\")\n                    for (var i = 0; i < element; i++) {\n                        if (!controler) {\n                            array[tempArr[0]][tempArr[1] + i].value = 1;\n                            array[tempArr[0]][tempArr[1] + i].orientation = orientation;\n                            array[tempArr[0]][tempArr[1] + i].length = element;\n                            if (array[tempArr[0] - 1] && array[tempArr[0] - 1][tempArr[1] + i] && array[tempArr[0] - 1][tempArr[1] + i].value == 0)\n                                array[tempArr[0] - 1][tempArr[1] + i].value = 2;\n                            if (array[tempArr[0] + 1] && array[tempArr[0] + 1][tempArr[1] + i] && array[tempArr[0] + 1][tempArr[1] + i].value == 0)\n                                array[tempArr[0] + 1][tempArr[1] + i].value = 2;\n                            if (i == 0 && array[tempArr[0]][tempArr[1] - 1] && array[tempArr[0]][tempArr[1] - 1].value == 0)\n                                array[tempArr[0]][tempArr[1] - 1].value = 2;\n                            if (i == 0 && array[tempArr[0] + 1] && array[tempArr[0] + 1][tempArr[1] - 1] && array[tempArr[0] + 1][tempArr[1] - 1].value == 0)\n                                array[tempArr[0] + 1][tempArr[1] - 1].value = 2;\n                            if (i == 0 && array[tempArr[0] - 1] && array[tempArr[0] - 1][tempArr[1] - 1] && array[tempArr[0] - 1][tempArr[1] - 1].value == 0)\n                                array[tempArr[0] - 1][tempArr[1] - 1].value = 2;\n                            if (i == element - 1 && array[tempArr[0]][tempArr[1] + element] && array[tempArr[0]][tempArr[1] + element].value == 0)\n                                array[tempArr[0]][tempArr[1] + element].value = 2;\n                            if (i == element - 1 && array[tempArr[0] - 1] && array[tempArr[0] - 1][tempArr[1] + element] && array[tempArr[0] - 1][tempArr[1] + element].value == 0)\n                                array[tempArr[0] - 1][tempArr[1] + element].value = 2;\n                            if (i == element - 1 && array[tempArr[0] + 1] && array[tempArr[0 + 1]][tempArr[1] + element] && array[tempArr[0] + 1][tempArr[1] + element].value == 0)\n                                array[tempArr[0] + 1][tempArr[1] + element].value = 2;\n                        }\n                    }\n                else if (orientation == \"bottom\")\n                    for (var i = 0; i < element; i++) {\n                        if (!controler) {\n                            array[tempArr[0] + i][tempArr[1]].value = 1;\n                            array[tempArr[0] + i][tempArr[1]].orientation = orientation;\n                            array[tempArr[0] + i][tempArr[1]].length = element;\n                            if (array[tempArr[0] + i][tempArr[1] - 1] && array[tempArr[0] + i][tempArr[1] - 1].value == 0)\n                                array[tempArr[0] + i][tempArr[1] - 1].value = 2;\n                            if (array[tempArr[0] + i][tempArr[1] + 1] && array[tempArr[0] + i][tempArr[1] + 1].value == 0)\n                                array[tempArr[0] + i][tempArr[1] + 1].value = 2;\n                            if (i == 0 && array[tempArr[0] - 1] && array[tempArr[0] - 1][tempArr[1]] && array[tempArr[0] - 1][tempArr[1]].value == 0)\n                                array[tempArr[0] - 1][tempArr[1]].value = 2;\n                            if (i == 0 && array[tempArr[0] - 1] && array[tempArr[0] - 1][tempArr[1] - 1] && array[tempArr[0] - 1][tempArr[1] - 1].value == 0)\n                                array[tempArr[0] - 1][tempArr[1] - 1].value = 2;\n                            if (i == 0 && array[tempArr[0] - 1] && array[tempArr[0] - 1][tempArr[1] + 1] && array[tempArr[0] - 1][tempArr[1] + 1].value == 0)\n                                array[tempArr[0] - 1][tempArr[1] + 1].value = 2;\n                            if (i == element - 1 && array[tempArr[0] + element] && array[tempArr[0] + element][tempArr[1]] && array[tempArr[0] + element][tempArr[1]].value == 0)\n                                array[tempArr[0] + element][tempArr[1]].value = 2;\n                            if (i == element - 1 && array[tempArr[0] + element] && array[tempArr[0] + element][tempArr[1] - 1] && array[tempArr[0] + element][tempArr[1] - 1].value == 0)\n                                array[tempArr[0] + element][tempArr[1] - 1].value = 2;\n                            if (i == element - 1 && array[tempArr[0] + element] && array[tempArr[0] + element][tempArr[1] + 1] && array[tempArr[0] + element][tempArr[1] + 1].value == 0)\n                                array[tempArr[0] + element][tempArr[1] + 1].value = 2;\n                        }\n                    }\n            }\n            catch (_b) {\n                controler = true;\n                fill(arrayCopy);\n                return 0;\n            }\n        }\n        fill(array);\n    });\n    return array;\n    function randomPos(curDir, element) {\n        var curX;\n        var curY;\n        if (curDir == 'bottom') {\n            curY = randomNum(0, array.length);\n            curX = randomNum(0, (array[curY].length - element));\n        }\n        else {\n            curY = randomNum(0, (array.length - element));\n            curX = randomNum(0, array[curY].length);\n        }\n        return new Array(curY, curX);\n    }\n}\nexports.fullFillRandomShips = fullFillRandomShips;\nfunction randomNum(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexports.randomNum = randomNum;\nfunction randomArr(myArray) {\n    var rand = myArray[Math.floor(Math.random() * myArray.length)];\n    return rand;\n}\nexports.randomArr = randomArr;\n\n\n//# sourceURL=webpack:///./generator.ts?");

/***/ }),

/***/ "./main.ts":
/*!*****************!*\
  !*** ./main.ts ***!
  \*****************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar generator_1 = __webpack_require__(/*! ./generator */ \"./generator.ts\");\nvar playfield_1 = __webpack_require__(/*! ./playfield */ \"./playfield.ts\");\nvar playerShips_1 = __webpack_require__(/*! ./playerShips */ \"./playerShips.ts\");\nvar ai_1 = __webpack_require__(/*! ./ai */ \"./ai.ts\");\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    exports.playerPlayfield = new playfield_1.playfield(\"player\");\n    exports.playerShips = new playerShips_1.playerShip();\n    exports.playerShips.createShips();\n    exports.computerPlayfield = new playfield_1.playfield(\"AI\");\n    exports.computerPlayfield.mainArr = generator_1.fullFillRandomShips(exports.computerPlayfield.mainArr);\n    exports.computerPlayfield.rewrite();\n    exports.playerShips.addListener();\n    exports.ai = new ai_1.AI();\n});\nfunction getStyle(el, styleProp) {\n    var defaultView = getComputedStyle(el);\n    var xdf = defaultView.getPropertyValue(styleProp);\n    return xdf;\n}\nexports.getStyle = getStyle;\n/* zabezpieczyc przed usuwaniem poprzez przesuwanie stawianych statków            | DONE\nstatków nie można stawiać jeden koło drugiego (zapełnienie 2 wokół 1 w tablicy)   | DONE\nogarnąć pointer na wybieranych statkach                                           | DONE\nwyróżnić wybrany statek                                                           | DONE\nobrócenie wybranego statku                                                        | DONE\nogarnąć dynamiczność elementów mainArr.length bo cos odkurwia                     | DONE\nrozpoczęcie gry  playerships.ts => 63                                             | DONE\nogarnac ze gracz jest glupi i nie bedzie mogl postawic statku xd                  | DONE\nstrzelanie                                                                        | DONE\nAI                                                                                | DONE\nwygrana/przegrana                                                                 | DONE\n\n!!!!\ndlugosc kliknietego juz postawionego jest nieprawidlowa (super) dlugosc fora 153  | DONE\ndynamiczne pokazywanie stawianego statku psuje potem usuwanie jezeli statek\n                                jest obrocony inaczej niz juz postawiony ta dalej | DONE */\n//BONUS: AI zatapia statki\n/* trzeba by dodac do lastaimove punkt startowy i aktualny punkt strzalu, jak znajdzie w jedna strone to dobija az znajdzie puste pole w mainarr albo zajete wg AiArr,\n wtedy przechodzi do nastepnego kierunku wg punktu startowego i tak do usranej smierci :D\n ~2h pracy mysle zeby to jakos wygladalo a nie 40tys ifow ktore de facto tez pisanie nie wiadomo ile*/ \n\n\n//# sourceURL=webpack:///./main.ts?");

/***/ }),

/***/ "./manager.ts":
/*!********************!*\
  !*** ./manager.ts ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar generator_1 = __webpack_require__(/*! ./generator */ \"./generator.ts\");\nvar main_1 = __webpack_require__(/*! ./main */ \"./main.ts\");\nvar settings_1 = __webpack_require__(/*! ./settings */ \"./settings.ts\");\nvar decorators_1 = __webpack_require__(/*! ./decorators */ \"./decorators.ts\");\nvar Manager = /** @class */ (function () {\n    function Manager() {\n        this.firstPlayer = '';\n        this.timeToStart = settings_1.settings.waitTime;\n        this.retardedCounter = 0;\n    }\n    Manager.prototype.startGame = function () {\n        var _this = this;\n        var curtain = document.createElement(\"div\");\n        curtain.className = \"curtain\";\n        curtain.style.width = window.innerWidth + \"px\";\n        curtain.style.height = window.innerHeight + \"px\";\n        var curtainBox = document.createElement(\"div\");\n        curtainBox.className = \"curtainBox\";\n        curtainBox.textContent = \"Game will start in: \" + this.timeToStart;\n        var timer = setInterval(function () {\n            _this.timeToStart--;\n            curtainBox.textContent = \"Game will start in: \" + _this.timeToStart;\n            if (_this.timeToStart < 0) {\n                clearInterval(timer);\n                _this.giveMove(_this.firstPlayer);\n                curtain.remove();\n            }\n        }, 1000);\n        curtain.appendChild(curtainBox);\n        document.body.appendChild(curtain);\n        curtainBox.style.top = window.innerHeight / 2 - parseFloat(main_1.getStyle(curtainBox, \"height\")) / 2 - parseFloat(main_1.getStyle(curtainBox, \"padding\")) + \"px\";\n        curtainBox.style.left = window.innerWidth / 2 - parseFloat(main_1.getStyle(curtainBox, \"width\")) / 2 - parseFloat(main_1.getStyle(curtainBox, \"padding\")) + \"px\";\n        window.addEventListener(\"resize\", this.resizeCurtain);\n        this.firstPlayer = generator_1.randomArr([\"player\", \"AI\"]);\n        var temp = document.getElementsByClassName(\"main player\")[0];\n        temp.onclick = function () {\n            var curtain = document.createElement(\"div\");\n            curtain.className = \"curtain\";\n            curtain.style.width = window.innerWidth + \"px\";\n            curtain.style.height = window.innerHeight + \"px\";\n            var curtainBox = document.createElement(\"div\");\n            curtainBox.className = \"curtainBox\";\n            var curtainButton = document.createElement(\"button\");\n            if (_this.retardedCounter < 3) {\n                curtainBox.innerHTML = \"This is your playfield. To move click on the second one. When waiting for AI to move please, do not click here.<br/><br/>\";\n                curtainButton.textContent = \"Understood\";\n                _this.retardedCounter++;\n            }\n            else {\n                curtainBox.innerHTML = \"Are you retarded or what?<br/><br/>\";\n                curtainButton.textContent = \"Yes I do have autism\";\n            }\n            curtainButton.onclick = function () { return curtain.remove(); };\n            curtainBox.appendChild(curtainButton);\n            curtain.appendChild(curtainBox);\n            document.body.appendChild(curtain);\n            curtainBox.style.top = window.innerHeight / 2 - parseFloat(main_1.getStyle(curtainBox, \"height\")) / 2 - parseFloat(main_1.getStyle(curtainBox, \"padding\")) + \"px\";\n            curtainBox.style.left = window.innerWidth / 2 - parseFloat(main_1.getStyle(curtainBox, \"width\")) / 2 - parseFloat(main_1.getStyle(curtainBox, \"padding\")) + \"px\";\n            curtainButton.style.marginLeft = parseFloat(main_1.getStyle(curtainBox, \"width\")) / 2 - parseFloat(main_1.getStyle(curtainButton, \"width\")) / 2 + \"px\";\n        };\n    };\n    Manager.prototype.resizeCurtain = function () {\n        try {\n            var curtain = document.getElementsByClassName(\"curtain\")[0];\n            curtain.style.width = window.innerWidth + \"px\";\n            curtain.style.height = window.innerHeight + \"px\";\n            var curtainBox = document.getElementsByClassName(\"curtainBox\")[0];\n            curtainBox.style.top = window.innerHeight / 2 - parseFloat(main_1.getStyle(curtainBox, \"height\")) / 2 - parseFloat(main_1.getStyle(curtainBox, \"padding\")) + \"px\";\n            curtainBox.style.left = window.innerWidth / 2 - parseFloat(main_1.getStyle(curtainBox, \"width\")) / 2 - parseFloat(main_1.getStyle(curtainBox, \"padding\")) + \"px\";\n        }\n        catch (err1) { }\n    };\n    Manager.prototype.giveMove = function (curPlayer) {\n        function fill(aim, setMove) {\n            if (main_1.playerPlayfield.mainArr[setMove[1]][setMove[0]].shooted == false) {\n                if (aim && main_1.playerPlayfield.mainArr[setMove[1]][setMove[0]].value == 1) {\n                    main_1.playerPlayfield.mainArr[setMove[1]][setMove[0]].shooted = true;\n                    main_1.playerPlayfield.rewrite();\n                    accessToThis.giveMove(\"player\");\n                }\n                else if (!aim && main_1.playerPlayfield.mainArr[setMove[1]][setMove[0]].value != 1) {\n                    main_1.playerPlayfield.mainArr[setMove[1]][setMove[0]].shooted = true;\n                    main_1.playerPlayfield.rewrite();\n                    accessToThis.giveMove(\"player\");\n                }\n                else {\n                    setMove = [];\n                    setMove.push(generator_1.randomNum(0, settings_1.settings.playgroundSize), generator_1.randomNum(0, settings_1.settings.playgroundSize));\n                    fill(aim, setMove);\n                    return 0;\n                }\n            }\n            else {\n                setMove = [];\n                setMove.push(generator_1.randomNum(0, settings_1.settings.playgroundSize), generator_1.randomNum(0, settings_1.settings.playgroundSize));\n                fill(aim, setMove);\n                return 0;\n            }\n        }\n        var array = [];\n        var arrStr = [];\n        if (curPlayer == \"player\")\n            array = main_1.playerPlayfield;\n        else\n            array = main_1.computerPlayfield;\n        array.mainArr.forEach(function (element) {\n            var check = element.every(function (elem) {\n                return (elem.value != 1 || (elem.value == 1 && elem.shooted == true));\n            });\n            arrStr.push(check);\n        });\n        if (arrStr.every(function (elem) { return elem == true; })) {\n            return [curPlayer, 0];\n        }\n        var accessToThis = this;\n        if (curPlayer == \"player\")\n            main_1.computerPlayfield.addEvent();\n        else\n            main_1.ai.shot();\n        return curPlayer;\n    };\n    __decorate([\n        decorators_1.log,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Manager.prototype, \"giveMove\", null);\n    return Manager;\n}());\nexports.Manager = Manager;\n\n\n//# sourceURL=webpack:///./manager.ts?");

/***/ }),

/***/ "./playerShips.ts":
/*!************************!*\
  !*** ./playerShips.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar settings_1 = __webpack_require__(/*! ./settings */ \"./settings.ts\");\nvar main_1 = __webpack_require__(/*! ./main */ \"./main.ts\");\nvar manager_1 = __webpack_require__(/*! ./manager */ \"./manager.ts\");\nvar generator_1 = __webpack_require__(/*! ./generator */ \"./generator.ts\");\nvar playerShip = /** @class */ (function () {\n    function playerShip() {\n        this.div = document.createElement(\"div\");\n        this.game = '';\n        this.div.className = \"shipsToAdd\";\n        document.body.appendChild(this.div);\n        this.select = this.select.bind(this);\n        this.resizeShipsWindow = this.resizeShipsWindow.bind(this);\n        this.postShipThere = this.postShipThere.bind(this);\n        this.rotateCurShip = this.rotateCurShip.bind(this);\n        this.removeShip = this.removeShip.bind(this);\n    }\n    playerShip.prototype.createShips = function () {\n        var _this = this;\n        var letter = \"A\";\n        settings_1.settings.defaultShips.forEach(function (element) {\n            var oneShip = document.createElement(\"div\");\n            oneShip.className = \"ship\";\n            oneShip.id = letter + element.toString();\n            letter = letter.substring(0, letter.length - 1) + String.fromCharCode(letter.charCodeAt(letter.length - 1) + 1);\n            for (var i = 0; i < element; i++) {\n                var singleDiv = document.createElement(\"div\");\n                singleDiv.className = \"fas fa-ship\";\n                oneShip.appendChild(singleDiv);\n            }\n            _this.div.appendChild(oneShip);\n        });\n        var xd = main_1.getStyle(document.body, \"margin\");\n        var marginToSubstract = parseInt(xd);\n        var cheat = document.createElement(\"button\");\n        cheat.onclick = function () {\n            main_1.playerPlayfield.mainArr.forEach(function (element) {\n                element.forEach(function (elem) {\n                    elem.value = 0;\n                    elem.length = null;\n                    elem.orientation = settings_1.settings.defOrientation;\n                    elem.shooted = false;\n                });\n            });\n            var elements = document.getElementsByClassName(\"elem player\");\n            Array.prototype.forEach.call(elements, function (el) {\n                el.onclick = function () { return false; };\n                el.onmouseenter = function () { return false; };\n                el.onmouseleave = function () { return false; };\n                el.style.cursor = \"default\";\n                el.style.color = \"\";\n            });\n            main_1.playerShips.curShip = null;\n            generator_1.fullFillRandomShips(main_1.playerPlayfield.mainArr);\n            var myNode = document.getElementsByClassName(\"shipsToAdd\")[0];\n            while (myNode.lastChild) {\n                myNode.removeChild(myNode.lastChild);\n            }\n            main_1.playerPlayfield.rewrite();\n            _this.startGame();\n        };\n        cheat.textContent = \"Push random ships\";\n        cheat.style.margin = \"10px\";\n        this.div.insertBefore(cheat, this.div.firstChild);\n        this.div.style.width = (window.innerWidth - main_1.playerPlayfield.playDiv.offsetWidth * 2 - 2 * marginToSubstract) + \"px\";\n        Array.prototype.forEach.call(this.div.children, function (el) {\n            if (el.tagName != \"BUTTON\")\n                el.style.margin = \"0px\";\n            el.style.padding = \"0px\";\n            el.style.height = (parseFloat(main_1.getStyle(main_1.playerPlayfield.playDiv, \"height\")) - 10 - parseFloat(main_1.getStyle(cheat, \"margin\")) * 2) / _this.div.children.length + \"px\";\n        });\n        window.addEventListener(\"resize\", this.resizeShipsWindow);\n    };\n    playerShip.prototype.resizeShipsWindow = function () {\n        var xd = main_1.getStyle(document.body, \"margin\");\n        var marginToSubstract = parseInt(xd);\n        this.div.style.width = (window.innerWidth - main_1.playerPlayfield.playDiv.offsetWidth * 2 - 2 * marginToSubstract) + \"px\";\n    };\n    playerShip.prototype.addListener = function () {\n        var accessThis = this;\n        var shipCol = document.getElementsByClassName(\"ship\");\n        if (shipCol.length > 0) {\n            Array.prototype.forEach.call(shipCol, function (el) {\n                el.onclick = accessThis.select;\n                el.style.cursor = \"pointer\";\n            });\n            var placedShips = main_1.playerPlayfield.playDiv.getElementsByClassName(\"elem fa-ship player\");\n            Array.prototype.forEach.call(placedShips, function (el) {\n                el.onclick = accessThis.removeShip;\n                el.style.cursor = \"pointer\";\n            });\n        }\n        else {\n            this.startGame();\n        }\n    };\n    playerShip.prototype.startGame = function () {\n        var _this = this;\n        var accessThis = this;\n        var button = document.createElement(\"button\");\n        button.textContent = \"Start game\";\n        button.onclick = function () {\n            var placedShips = main_1.playerPlayfield.playDiv.getElementsByClassName(\"elem fa-ship player\");\n            Array.prototype.forEach.call(placedShips, function (el) {\n                el.onclick = function () { return 0; };\n                el.style.cursor = \"default\";\n            });\n            _this.game = new manager_1.Manager();\n            _this.game.startGame();\n        };\n        this.div.innerHTML = \"\";\n        this.div.appendChild(button);\n        var placedShips = main_1.playerPlayfield.playDiv.getElementsByClassName(\"elem fa-ship player\");\n        Array.prototype.forEach.call(placedShips, function (el) {\n            el.onclick = function () {\n                button.remove();\n                accessThis.removeShip(event);\n            };\n            el.style.cursor = \"pointer\";\n        });\n    };\n    playerShip.prototype.removeShip = function (event) {\n        var accessThis = this;\n        var placedShips = main_1.playerPlayfield.playDiv.getElementsByClassName(\"elem fa-ship player\");\n        Array.prototype.forEach.call(placedShips, function (el) {\n            el.onclick = function () { return false; };\n            el.style.cursor = \"default\";\n        });\n        var tempPos = event.path[0].id.split(\",\");\n        var toTrash = [];\n        toTrash.push({\n            a: Number([tempPos[1]]),\n            b: Number([tempPos[0]])\n        });\n        var tempPosNmb = [];\n        tempPos.forEach(function (element) {\n            tempPosNmb.push(Number(element));\n        });\n        var index = 1;\n        for (var i = 1; i < main_1.playerPlayfield.mainArr[tempPosNmb[1]][tempPosNmb[0]].static; i++) {\n            if (main_1.playerPlayfield.mainArr[tempPosNmb[1]][tempPosNmb[0]].staticOr == true) {\n                try {\n                    if (main_1.playerPlayfield.mainArr[tempPosNmb[1]][tempPosNmb[0] + i].value == 1) {\n                        toTrash.push({\n                            a: Number([tempPos[1]]),\n                            b: Number([tempPos[0]]) + i\n                        });\n                    }\n                    else {\n                        try {\n                            if (main_1.playerPlayfield.mainArr[tempPosNmb[1]][tempPosNmb[0] - index].value == 1) {\n                                toTrash.push({\n                                    a: Number([tempPos[1]]),\n                                    b: Number([tempPos[0]]) - index\n                                });\n                                index++;\n                            }\n                        }\n                        catch (err) { }\n                    }\n                }\n                catch (err) {\n                    if (main_1.playerPlayfield.mainArr[tempPosNmb[1]][tempPosNmb[0] - index].value == 1) {\n                        toTrash.push({\n                            a: Number([tempPos[1]]),\n                            b: Number([tempPos[0]]) - index\n                        });\n                        index++;\n                    }\n                }\n            }\n            else {\n                try {\n                    if (main_1.playerPlayfield.mainArr[tempPosNmb[1] + i][tempPosNmb[0]].value == 1) {\n                        toTrash.push({\n                            a: Number([tempPos[1]]) + i,\n                            b: Number([tempPos[0]])\n                        });\n                    }\n                    else {\n                        if (main_1.playerPlayfield.mainArr[tempPosNmb[1] - index][tempPosNmb[0]].value == 1) {\n                            toTrash.push({\n                                a: Number([tempPos[1]]) - index,\n                                b: Number([tempPos[0]])\n                            });\n                            index++;\n                        }\n                    }\n                }\n                catch (err) {\n                    if (main_1.playerPlayfield.mainArr[tempPosNmb[1] - index][tempPosNmb[0]].value == 1) {\n                        toTrash.push({\n                            a: Number([tempPos[1]]) - index,\n                            b: Number([tempPos[0]])\n                        });\n                        index++;\n                    }\n                }\n            }\n        }\n        var oneShip = document.createElement(\"div\");\n        oneShip.className = \"ship\";\n        oneShip.id = \"Z\" + toTrash.length;\n        for (var i = 0; i < toTrash.length; i++) {\n            var singleDiv = document.createElement(\"div\");\n            singleDiv.className = \"fas fa-ship\";\n            oneShip.appendChild(singleDiv);\n        }\n        oneShip.onclick = this.select;\n        oneShip.style.cursor = \"pointer\";\n        main_1.playerShips.div.appendChild(oneShip);\n        toTrash.forEach(function (element) {\n            var temp = main_1.playerPlayfield.mainArr[element.a][element.b];\n            temp.length = null;\n            temp.static = null;\n            temp.oldValue = null;\n            temp.orientation = settings_1.settings.defOrientation;\n            temp.staticOr = null;\n            temp.shooted = false;\n            temp.value = 0;\n        });\n        main_1.playerShips.removeUnnecessaryLength();\n        main_1.playerPlayfield.mainArr.forEach(function (element) {\n            element.forEach(function (elem) {\n                if (elem.value == 2)\n                    elem.value = 0;\n            });\n        });\n        this.write2nearTo1();\n        main_1.playerPlayfield.rewrite();\n        placedShips = main_1.playerPlayfield.playDiv.getElementsByClassName(\"elem fa-ship player\");\n        Array.prototype.forEach.call(placedShips, function (el) {\n            el.onclick = accessThis.removeShip;\n            el.style.cursor = \"pointer\";\n        });\n    };\n    playerShip.prototype.rotateCurShip = function (event) {\n        try {\n            event.preventDefault();\n            var mousePos_1 = [];\n            event.path[0].id.split(\",\").forEach(function (element) {\n                mousePos_1.push(Number(element));\n            });\n            main_1.playerPlayfield.mainArr[mousePos_1[1]][mousePos_1[0]].orientation = !main_1.playerPlayfield.mainArr[mousePos_1[1]][mousePos_1[0]].orientation;\n            this.curShip.orientation = main_1.playerPlayfield.mainArr[mousePos_1[1]][mousePos_1[0]].orientation;\n            main_1.playerPlayfield.mainArr.forEach(function (element) {\n                element.forEach(function (element2) {\n                    if (element2.value == 3) {\n                        element2.value = element2.oldValue;\n                        element2.oldValue = null;\n                        element2.orientation = settings_1.settings.defOrientation;\n                        var elem = document.getElementById(element2.x + \",\" + element2.y);\n                        elem.style.color = \"\";\n                        elem.style.cursor = \"default\";\n                    }\n                    main_1.playerPlayfield.rewrite();\n                });\n            });\n            main_1.playerShips.removeUnnecessaryLength();\n            var arrPos = main_1.playerPlayfield.mainArr[mousePos_1[1]][mousePos_1[0]];\n            var length_1 = this.curShip.children.length;\n            arrPos.orientation = this.curShip.orientation;\n            this.draw(3, main_1.playerPlayfield.mainArr[mousePos_1[1]][mousePos_1[0]], mousePos_1, length_1, event.path[0]);\n            main_1.playerPlayfield.rewrite();\n        }\n        catch (err) { }\n    };\n    playerShip.prototype.select = function (event) {\n        var accessThis = this;\n        var curShipTemp = event.currentTarget.id;\n        main_1.playerShips.curShip = document.getElementById(curShipTemp.toString());\n        main_1.playerShips.curShip.style.color = \"Green\";\n        var shipCol = document.getElementsByClassName(\"ship\");\n        Array.prototype.forEach.call(shipCol, function (el) {\n            el.onclick = function () { return false; };\n            el.style.cursor = \"default\";\n        });\n        var placedShips = main_1.playerPlayfield.playDiv.getElementsByClassName(\"elem fa-ship player\");\n        Array.prototype.forEach.call(placedShips, function (el) {\n            el.onclick = function () { return false; };\n            el.style.cursor = \"default\";\n        });\n        window.addEventListener(\"contextmenu\", this.rotateCurShip);\n        var entries = document.getElementsByClassName(\"main \" + main_1.playerPlayfield.type);\n        Array.prototype.forEach.call(entries[0].children, function (el) {\n            var boxes = el.getElementsByClassName(\"elem\");\n            Array.prototype.forEach.call(boxes, function (el) {\n                el.onmouseenter = function (event) {\n                    var mousePos = [];\n                    event.currentTarget.id.split(\",\").forEach(function (element) {\n                        mousePos.push(Number(element));\n                    });\n                    var arrPos = main_1.playerPlayfield.mainArr[mousePos[1]][mousePos[0]];\n                    var length = accessThis.curShip.children.length;\n                    if (accessThis.curShip.orientation != undefined)\n                        arrPos.orientation = accessThis.curShip.orientation;\n                    else\n                        arrPos.orientation = settings_1.settings.defOrientation;\n                    accessThis.draw(3, arrPos, mousePos, length, event.path[0]);\n                    main_1.playerPlayfield.rewrite();\n                    el.onmouseleave = function () {\n                        main_1.playerPlayfield.mainArr.forEach(function (element) {\n                            element.forEach(function (element2) {\n                                if (element2.value == 3) {\n                                    element2.value = element2.oldValue;\n                                    element2.oldValue = null;\n                                    element2.orientation = settings_1.settings.defOrientation;\n                                    var elem = document.getElementById(element2.x + \",\" + element2.y);\n                                    elem.style.color = \"\";\n                                    elem.style.cursor = \"default\";\n                                }\n                                main_1.playerPlayfield.rewrite();\n                            });\n                        });\n                        main_1.playerShips.removeUnnecessaryLength();\n                    };\n                };\n            });\n        });\n        var elements = document.getElementsByClassName(\"elem player fa-stop\");\n        Array.prototype.forEach.call(elements, function (el) {\n            el.onclick = accessThis.postShipThere;\n        });\n    };\n    playerShip.prototype.draw = function (target, arrPos, mousePos, length, toPointer) {\n        var index = 1;\n        var i = 0;\n        var tempArr = [];\n        function checker() {\n            if (tempArr.every(function (element) {\n                return (element.value == 0);\n            })) {\n                toPointer.style.cursor = \"pointer\";\n                tempArr.forEach(function (element) {\n                    element.oldValue = element.value;\n                    element.value = target;\n                });\n            }\n            else {\n                tempArr.forEach(function (element) {\n                    var elem = document.getElementById(element.x + \",\" + element.y);\n                    elem.style.color = \"red\";\n                    element.oldValue = element.value;\n                    element.value = target;\n                });\n            }\n        }\n        function inDraw() {\n            if (arrPos.orientation) {\n                try {\n                    if (main_1.playerPlayfield.mainArr[mousePos[1]][mousePos[0] + i].value != undefined)\n                        tempArr.push(main_1.playerPlayfield.mainArr[mousePos[1]][mousePos[0] + i]);\n                    i++;\n                    if (i < length)\n                        inDraw();\n                    else\n                        checker();\n                }\n                catch (error) {\n                    if (main_1.playerPlayfield.mainArr[mousePos[1]][mousePos[0] - index].value != undefined)\n                        tempArr.push(main_1.playerPlayfield.mainArr[mousePos[1]][mousePos[0] - index]);\n                    index++;\n                    i++;\n                    if (i < length)\n                        inDraw();\n                    else\n                        checker();\n                }\n            }\n            else {\n                try {\n                    if (main_1.playerPlayfield.mainArr[mousePos[1] + i][mousePos[0]].value != undefined)\n                        tempArr.push(main_1.playerPlayfield.mainArr[mousePos[1] + i][mousePos[0]]);\n                    i++;\n                    if (i < length)\n                        inDraw();\n                    else\n                        checker();\n                }\n                catch (error) {\n                    if (main_1.playerPlayfield.mainArr[mousePos[1] - index][mousePos[0]].value != undefined)\n                        tempArr.push(main_1.playerPlayfield.mainArr[mousePos[1] - index][mousePos[0]]);\n                    index++;\n                    i++;\n                    if (i < length)\n                        inDraw();\n                    else\n                        checker();\n                }\n            }\n        }\n        if (length > 0)\n            inDraw();\n    };\n    playerShip.prototype.postShipThere = function (event) {\n        var _this = this;\n        window.removeEventListener(\"contextmenu\", this.rotateCurShip);\n        var mousePos = [];\n        event.currentTarget.id.split(\",\").forEach(function (element) {\n            mousePos.push(Number(element));\n        });\n        var elements = document.getElementsByClassName(\"elem player\");\n        if (Array.prototype.every.call(elements, function (element) {\n            return (element.style.color != \"red\");\n        })) {\n            var index_1 = 1;\n            var statOr_1 = null;\n            main_1.playerPlayfield.mainArr.forEach(function (element) {\n                element.forEach(function (elem) {\n                    if (elem.value == 3) {\n                        elem.static = _this.curShip.children.length;\n                        if (index_1 == 1)\n                            statOr_1 = elem.orientation;\n                        elem.staticOr = statOr_1;\n                        elem.value = 1;\n                        index_1++;\n                    }\n                });\n            });\n            var arrPos = main_1.playerPlayfield.mainArr[mousePos[1]][mousePos[0]];\n            this.draw(1, arrPos, mousePos, arrPos.length, null);\n            Array.prototype.forEach.call(elements, function (el) {\n                el.onclick = function () { return false; };\n                el.onmouseenter = function () { return false; };\n                el.onmouseleave = function () { return false; };\n                el.style.cursor = \"default\";\n                el.style.color = \"\";\n            });\n            this.write2nearTo1();\n            this.curShip.remove();\n            this.curShip = null;\n            this.addListener();\n        }\n    };\n    playerShip.prototype.removeUnnecessaryLength = function () {\n        main_1.playerPlayfield.mainArr.forEach(function (element) {\n            element.forEach(function (elem) {\n                if (elem.value != 1)\n                    elem.length = null;\n            });\n        });\n    };\n    playerShip.prototype.write2nearTo1 = function () {\n        var toCheck = [];\n        main_1.playerPlayfield.mainArr.forEach(function (element) {\n            element.forEach(function (element) {\n                if (element.value == 1)\n                    toCheck.push(element);\n            });\n        });\n        toCheck.forEach(function (element) {\n            try {\n                if (main_1.playerPlayfield.mainArr[element.y + 1][element.x].value == 0)\n                    main_1.playerPlayfield.mainArr[element.y + 1][element.x].value = 2;\n            }\n            catch (err) { }\n            try {\n                if (main_1.playerPlayfield.mainArr[element.y - 1][element.x].value == 0)\n                    main_1.playerPlayfield.mainArr[element.y - 1][element.x].value = 2;\n            }\n            catch (err) { }\n            try {\n                if (main_1.playerPlayfield.mainArr[element.y][element.x - 1].value == 0)\n                    main_1.playerPlayfield.mainArr[element.y][element.x - 1].value = 2;\n            }\n            catch (err) { }\n            try {\n                if (main_1.playerPlayfield.mainArr[element.y][element.x + 1].value == 0)\n                    main_1.playerPlayfield.mainArr[element.y][element.x + 1].value = 2;\n            }\n            catch (err) { }\n            try {\n                if (main_1.playerPlayfield.mainArr[element.y + 1][element.x + 1].value == 0)\n                    main_1.playerPlayfield.mainArr[element.y + 1][element.x + 1].value = 2;\n            }\n            catch (err) { }\n            try {\n                if (main_1.playerPlayfield.mainArr[element.y - 1][element.x + 1].value == 0)\n                    main_1.playerPlayfield.mainArr[element.y - 1][element.x + 1].value = 2;\n            }\n            catch (err) { }\n            try {\n                if (main_1.playerPlayfield.mainArr[element.y + 1][element.x - 1].value == 0)\n                    main_1.playerPlayfield.mainArr[element.y + 1][element.x - 1].value = 2;\n            }\n            catch (err) { }\n            try {\n                if (main_1.playerPlayfield.mainArr[element.y - 1][element.x - 1].value == 0)\n                    main_1.playerPlayfield.mainArr[element.y - 1][element.x - 1].value = 2;\n            }\n            catch (err) { }\n        });\n        main_1.playerPlayfield.rewrite();\n    };\n    return playerShip;\n}());\nexports.playerShip = playerShip;\n\n\n//# sourceURL=webpack:///./playerShips.ts?");

/***/ }),

/***/ "./playfield.ts":
/*!**********************!*\
  !*** ./playfield.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar settings_1 = __webpack_require__(/*! ./settings */ \"./settings.ts\");\nvar main_1 = __webpack_require__(/*! ./main */ \"./main.ts\");\nvar playfield = /** @class */ (function () {\n    function playfield(className) {\n        this.playDiv = document.createElement(\"div\");\n        this.mainArr = [];\n        this.type = className;\n        this.playDiv.className += \"main \";\n        this.playDiv.className += this.type;\n        this.clicking = this.clicking.bind(this);\n        for (var i = 0; i < settings_1.settings.playgroundSize; i++) {\n            var tempArr = [];\n            for (var j = 0; j < settings_1.settings.playgroundSize; j++)\n                tempArr.push({\n                    x: j,\n                    y: i,\n                    value: 0,\n                    length: null,\n                    orientation: settings_1.settings.defOrientation,\n                    shooted: false\n                });\n            this.mainArr.push(tempArr);\n        }\n        for (var i = 0; i < this.mainArr.length; i++) {\n            var line = document.createElement(\"div\");\n            line.className = \"lineCon\";\n            for (var j = 0; j < settings_1.settings.playgroundSize; j++) {\n                var element = document.createElement(\"div\");\n                element.className = \"elem \";\n                element.className += className;\n                element.id = j + \",\" + i;\n                line.appendChild(element);\n            }\n            this.playDiv.appendChild(line);\n        }\n        document.body.appendChild(this.playDiv);\n        this.rewrite();\n    }\n    playfield.prototype.rewrite = function () {\n        var type = this.type;\n        var reqArr = this.mainArr;\n        var lines = this.playDiv.getElementsByClassName(\"lineCon\");\n        Array.prototype.forEach.call(lines, function (el, index) {\n            el.style.fontFamily = \"FontAwesome\";\n            var boxes = el.getElementsByClassName(\"elem\");\n            var index = index;\n            Array.prototype.forEach.call(boxes, function (el, indexEl) {\n                el.className = '';\n                el.style.fontWeight = \"900\";\n                el.style.opacity = \"1\";\n                if (reqArr[index][indexEl].value == 1 && type == \"player\" && reqArr[index][indexEl].shooted == false)\n                    el.className = \"elem fas fa-ship \" + type;\n                else if (reqArr[index][indexEl].value == 1 && reqArr[index][indexEl].shooted == true)\n                    el.className = \"elem fas fa-skull \" + type;\n                else if (reqArr[index][indexEl].shooted == true)\n                    el.className = \"elem fas fa-bomb \" + type;\n                /*\n                else if (reqArr[index][indexEl].value == 2 && type == \"player\")\n                    el.className = \"elem fas fa-times \" + type\n                */\n                else if (reqArr[index][indexEl].value == 3 && type == \"player\") {\n                    el.className = \"elem fas fa-ship \" + type;\n                    el.style.opacity = \"0.3\";\n                }\n                else\n                    el.className = \"elem fas fa-stop \" + type;\n            });\n        });\n    };\n    playfield.prototype.clicking = function (event) {\n        var arrPos = event.target.id.split(\",\");\n        this.mainArr[arrPos[1]][arrPos[0]].shooted = true;\n        this.rewrite();\n        this.removeEvent(\"A\");\n        main_1.playerShips.game.giveMove(\"AI\");\n    };\n    playfield.prototype.addEvent = function () {\n        var accessToThis = this;\n        var mainAI = document.getElementsByClassName(\"main AI\");\n        var lines = mainAI[0].getElementsByClassName(\"lineCon\");\n        Array.prototype.forEach.call(lines, function (el) {\n            var boxes = el.getElementsByClassName(\"elem\");\n            Array.prototype.forEach.call(boxes, function (el) {\n                if (el.classList.contains(\"fa-stop\")) {\n                    el.style.cursor = \"pointer\";\n                    el.onclick = accessToThis.clicking;\n                }\n            });\n        });\n    };\n    playfield.prototype.removeEvent = function (string) {\n        var mainAI = document.getElementsByClassName(\"main AI\");\n        var lines = mainAI[0].getElementsByClassName(\"lineCon\");\n        Array.prototype.forEach.call(lines, function (el, index) {\n            var boxes = el.getElementsByClassName(\"elem\");\n            Array.prototype.forEach.call(boxes, function (el, indexEl) {\n                el.onclick = function () { return false; };\n                el.style.cursor = \"default\";\n            });\n        });\n    };\n    return playfield;\n}());\nexports.playfield = playfield;\n\n\n//# sourceURL=webpack:///./playfield.ts?");

/***/ }),

/***/ "./settings.ts":
/*!*********************!*\
  !*** ./settings.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.settings = {\n    playgroundSize: 10,\n    defaultShips: [4, 3, 3, 2, 2, 2, 1, 1, 1, 1],\n    defOrientation: true,\n    waitTime: 1,\n    level: 0.5\n};\n/* export let settings = {\n    playgroundSize: 10,\n    defaultShips: [1],\n    defOrientation: true,\n    waitTime: 1,\n    level: 1\n}  */ \n\n\n//# sourceURL=webpack:///./settings.ts?");

/***/ })

/******/ });